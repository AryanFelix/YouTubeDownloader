name: Build & Release (Windows)

# Grant explicit permissions to the workflow so GITHUB_TOKEN can create releases
permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yt-dlp pyinstaller

      - name: Download ffmpeg (Windows build)
        shell: powershell
        run: |
          $zip = 'ffmpeg.zip'
          Invoke-WebRequest -Uri 'https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip' -OutFile $zip
          Expand-Archive -Path $zip -DestinationPath ./ffmpeg_temp
          Remove-Item $zip -Force
          $bin = Get-ChildItem -Path ./ffmpeg_temp -Recurse -Filter 'ffmpeg.exe' | Select-Object -First 1
          $binDir = Split-Path $bin.FullName
          New-Item -ItemType Directory -Force -Path './ffmpeg' | Out-Null
          Copy-Item -Path (Join-Path $binDir 'ffmpeg.exe') -Destination './ffmpeg/ffmpeg.exe'
          Copy-Item -Path (Join-Path $binDir 'ffprobe.exe') -Destination './ffmpeg/ffprobe.exe' -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force ./ffmpeg_temp

      - name: Build exe with PyInstaller
        run: |
          pyinstaller --onefile --name "YouTubeDownloader.exe" --add-data "ffmpeg;ffmpeg" "download_youtube_best.py"

      - name: Prepare artifact
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path artifact | Out-Null
          if (Test-Path 'dist\YouTubeDownloader.exe') {
            Copy-Item -Path 'dist\YouTubeDownloader.exe' -Destination 'artifact\YouTubeDownloader.exe' -Force
            Write-Host 'Copied exe to artifact/'
          } else {
            Write-Error 'dist\YouTubeDownloader.exe not found - build may have failed earlier.'
            exit 1
          }

      # Create release (only runs for tag pushes)
      - name: Create release (if triggered by tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: Automated release generated by GitHub Actions
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset (if release created)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: YouTubeDownloader.exe
          files: artifact/YouTubeDownloader.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: YouTubeDownloader-windows
          path: artifact/YouTubeDownloader.exe
